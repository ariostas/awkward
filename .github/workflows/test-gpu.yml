name: GPU Tests

on:
  workflow_dispatch:

concurrency:
  group: 'test-${{ github.head_ref }}-${{ github.run_id }}'
  cancel-in-progress: true

jobs:
  run-gpu-tests:
    name: Run GPU Tests

    runs-on: self-hosted

    env:
      PIP_ONLY_BINARY: numpy,pandas,pyarrow,numexpr,numexpr

    # Required for miniconda to activate conda
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Clean the workspace
        run: rm -rf * .[!.]*

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: test-env
          init-shell: bash
          create-args: >-
            python='3.13'

      - name: Generate build files
        run: |
          pip install pipx
          pipx run nox -s prepare -- --headers --signatures --tests

      - name: Cache awkward-cpp wheel
        id: cache-awkward-cpp-wheel
        uses: actions/cache@v4
        with:
          path: awkward-cpp/dist
          key: ${{ github.job }}-${{ hashFiles('awkward-cpp/**') }}

      - name: Build awkward-cpp wheel
        if: steps.cache-awkward-cpp-wheel.outputs.cache-hit != 'true'
        run: |
          python -m pip install build
          python -m build -w awkward-cpp

      - name: Find built wheel
        uses: tj-actions/glob@v22
        id: find-wheel
        with:
          files: |
            awkward-cpp/dist/*.whl

      - name: Add workaround for 3.13 + cramjam
        if: matrix.python-version == '3.13'
        run: echo 'PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1' >> $GITHUB_ENV
        shell: bash

      - name: Install awkward, awkward-cpp, and dependencies
        run: >-
          python -m pip install -v . ${{ steps.find-wheel.outputs.paths }} pytest-github-actions-annotate-failures
          -r "requirements-test-gpu.txt"

      - name: Print versions
        run: python -m pip list

      - name: Run GPU tests
        run: >-
          python -m pytest -vv -rs tests-cuda
